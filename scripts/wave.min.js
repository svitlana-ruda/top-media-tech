/**
 *	Wave JS
 *
 *	Description: Build a Sine wave on the canvas element, based on tweaks by the user.
 *	Author: RITESH KUKREJA
 *	Website: riteshkukreja.wordpress.com
 *	Github: https://github.com/riteshkukreja/sine-wave/
 *
**/
var Wave=function(e){if("object"!=typeof e&&"undefined"==typeof e.canvas)throw"Provide a valid canvas element for the application.";var n=e.canvas,t=n.getContext("2d"),i=e.frequency||.005,f=e.phase||30,a=e.amplitude||50,o=e.color||"red",d=e.shift||10,r=e.lineWidth||4,l="undefined"!=typeof e.outline?e.outline:!0,u="undefined"!=typeof e.fill?e.fill:!1,c="undefined"!=typeof e.gradient?e.gradient:!1,h=e.origin||{x:0,y:n.height/2},p=function(e,i,f){var a=r/2;if(t.beginPath(),l&&(t.fillStyle=f,t.lineWidth=2,t.arc(e,i,a,0,2*Math.PI),t.fill()),u){if(c){var o=t.createLinearGradient(0,0,0,n.height);o.addColorStop(.5,f),o.addColorStop(1,"transparent"),t.fillStyle=o}else t.fillStyle=f;t.fillRect(e-a,i-a,a,n.height-i+a)}},y=function(e,n,t,i,f){for(var a=h.x;a<h.x+e;a++){var o=i*Math.sin(f*(a+n));p(a,h.y+o,t)}},s=function(e,n){return Math.floor(Math.random()*(n-e))+e},v=function(){t.clearRect(0,0,n.width,n.height)},g=function(e){requestAnimationFrame(g),v(),f+=s(10,15)+d;var t="undefined"!=typeof e?e.amplitude||a:a,r="undefined"!=typeof e?e.color||o:o,l="undefined"!=typeof e?e.phase||f:f,u="undefined"!=typeof e?e.frequency||i:i;y(n.width,l,r,t,u)},m=function(e){f+=s(10,15)+d;var t="undefined"!=typeof e?e.amplitude||a:a,r="undefined"!=typeof e?e.color||o:o,l="undefined"!=typeof e?e.phase||f:f,u="undefined"!=typeof e?e.frequency||i:i;y(n.width,l,r,t,u)};this.redraw=function(e){m(e)},this.draw=function(e){g(e)},this.clearCanvas=function(){v()}};